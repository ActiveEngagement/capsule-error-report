{"version":3,"sources":["webpack://CapsuleErrorReport/./node_modules/capsule-lint/rules/html-valid-content-model.js","webpack://CapsuleErrorReport/./node_modules/capsule-lint/rules/index.js","webpack://CapsuleErrorReport/./node_modules/capsule-lint/index.js","webpack://CapsuleErrorReport/./node_modules/capsule-lint/lib/EventTree.js","webpack://CapsuleErrorReport/./node_modules/@vue-interface/btn/src/Btn.vue?b931","webpack://CapsuleErrorReport/node_modules/@vue-interface/btn/src/Btn.vue","webpack://CapsuleErrorReport/./node_modules/@vue-interface/btn/src/Btn.vue?aa1e","webpack://CapsuleErrorReport/./node_modules/@vue-interface/btn/src/Btn.vue","webpack://CapsuleErrorReport/./node_modules/@vue-interface/btn/index.js","webpack://CapsuleErrorReport/./node_modules/htmlhint/dist/htmlhint.js","webpack://CapsuleErrorReport/./node_modules/capsule-lint/rules/head-valid-content-model.js","webpack://CapsuleErrorReport/./node_modules/@vue-interface/date-filter/index.js","webpack://CapsuleErrorReport/./node_modules/vue-notepad/src/Notepad.vue?a64a","webpack://CapsuleErrorReport/./node_modules/vue-notepad/src/Notepad.vue?c702","webpack://CapsuleErrorReport/./node_modules/vue-notepad/src/Notepad.vue?c73f","webpack://CapsuleErrorReport/./node_modules/vue-interface/src/Directives/Autogrow/Autogrow.js","webpack://CapsuleErrorReport/./node_modules/vue-interface/src/Directives/Autogrow/index.js","webpack://CapsuleErrorReport/node_modules/vue-notepad/src/Notepad.vue","webpack://CapsuleErrorReport/./node_modules/vue-notepad/src/Notepad.vue?a86d","webpack://CapsuleErrorReport/./node_modules/vue-notepad/src/Notepad.vue","webpack://CapsuleErrorReport/./node_modules/vue-notepad/src/index.js","webpack://CapsuleErrorReport/./node_modules/capsule-lint/rules/valid-path-format.js"],"names":[],"mappings":";;;;;AAAA,kBAAkB,mBAAO,CAAC,MAAkB;;AAE5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;;AAEpD,qDAAqD,cAAc,iBAAiB,0CAA0C,wBAAwB,UAAU;;AAEhK;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,iBAAiB;;AAEhD,sDAAsD,cAAc;;AAEpE;AACA,qBAAqB;;AAErB;AACA;AACA,sD;AACA,+BAA+B,iBAAiB;;AAEhD,iDAAiD,cAAc;;AAE/D;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,mC;AACA,2BAA2B,iBAAiB;;AAE5C,6CAA6C,cAAc;;AAE3D;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA,uBAAuB,iBAAiB;;AAExC,yCAAyC,oBAAoB,8CAA8C,iBAAiB;;AAE5H;AACA;;AAEA;AACA,uBAAuB,iBAAiB;;AAExC,yCAAyC,oBAAoB,+CAA+C,iBAAiB;;AAE7H;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;;AAE5C,6CAA6C,cAAc,2CAA2C,qEAAqE;;AAE3K;AACA,iBAAiB;AACjB,SAAS;AACT;AACA,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChG+D;AACA;AACb;;AAE3C;AACP,gCAAgC,kCAAqB;AACrD,gCAAgC,kCAAqB;AACrD,yBAAyB,2BAAe;AACxC,E;;ACRkD;AACA;AAClB;;AAEhC,YAAY,KAAK;AACjB,IAAI,oBAAQ,SAAS,KAAK;AAC1B,CAAC;;AAED;AACA,WAAW,oBAAQ,wBAAwB,cAAa,gB;AACxD;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,2B;;;;;;;;;;AC7IA,0BAA0B,aAAa,0BAA0B,wBAAwB,kCAAkC,yBAAyB,oDAAoD,KAAK,qBAAqB,2CAA2C,yBAAyB,wDAAwD,KAAK,qBAAqB,gDAAgD,yBAAyB,wCAAwC,KAAK,qBAAqB,qCAAqC,yBAAyB,wCAAwC,KAAK,qBAAqB;AACnoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC2BiD;AACF;AACF;;AAE9B;;AAEf;;AAEA;AACA,QAAQ,2BAAQ;AAChB,QAAQ,0BAAO;AACf;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,mBAAmB,kCAAS;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC,EAAC;;;ACtIyQ,CAAgB,+FAAG,EAAC,C;;;;;ACA7M;AAC3B;AACL;;;AAGlD;AACgF;AAChF,gBAAgB,8CAAU;AAC1B,EAAE,+BAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,yD;;AClBa;AACb,sEAAG,E;;;;;;;ACDlB;AACA,CAAC,KAA4D;AAC7D,CAAC,SACsD;AACvD,CAAC,qBAAqB;;AAEtB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,2DAA2D,6BAA6B,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,6CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,eAAe;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,UAAU;AACV;AACA;AACA,EAAE;AACF;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,iDAAiD,EAAE;AACzG;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA,gDAAgD,IAAI;AACpD,kDAAkD,IAAI;AACtD;AACA,8DAA8D,IAAI;AAClE,uCAAuC,IAAI,kBAAkB,EAAE;AAC/D,kCAAkC,EAAE,OAAO,EAAE;AAC7C,kCAAkC,EAAE;AACpC,oCAAoC,EAAE,WAAW,EAAE,EAAE,IAAI;AACzD,uCAAuC,IAAI,8BAA8B,EAAE,UAAU,IAAI;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,QAAQ;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,6CAA6C;AAC9E;AACA;AACA;AACA,qCAAqC,oDAAoD;AACzF;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,UAAU;AACV;AACA;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA;AACA;AACA,iDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,UAAU,EAAE;AAC7E;AACA;AACA,6DAA6D,+BAA+B,EAAE;AAC9F;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,+DAA+D,gDAAgD,EAAE;AACjH;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,iEAAiE,UAAU,EAAE;AAC7E;AACA;AACA,6DAA6D,+BAA+B,EAAE;AAC9F;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,yDAAyD,+BAA+B,EAAE;AAC1F;AACA;AACA,sBAAsB;AACtB;AACA;AACA,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;AACN;;AAEA,EAAE;;AAEF;AACA,+CAA+C,cAAc;;AAE7D,+CAA+C,qCAAqC,2BAA2B,EAAE,EAAE;;AAEnH,kDAAkD,qCAAqC,8BAA8B,EAAE,EAAE;;AAEzH,6CAA6C,qCAAqC,2BAA2B,EAAE,EAAE;;AAEjH,sDAAsD,qCAAqC,kCAAkC,EAAE,EAAE;;AAEjI,oDAAoD,qCAAqC,gCAAgC,EAAE,EAAE;;AAE7H,0DAA0D,qCAAqC,sCAAsC,EAAE,EAAE;;AAEzI,sDAAsD,qCAAqC,kCAAkC,EAAE,EAAE;;AAEjI,0DAA0D,qCAAqC,sCAAsC,EAAE,EAAE;;AAEzI,mDAAmD,qCAAqC,+BAA+B,EAAE,EAAE;;AAE3H,iDAAiD,qCAAqC,6BAA6B,EAAE,EAAE;;AAEvH,iDAAiD,qCAAqC,6BAA6B,EAAE,EAAE;;AAEvH,uDAAuD,qCAAqC,mCAAmC,EAAE,EAAE;;AAEnI,iDAAiD,qCAAqC,6BAA6B,EAAE,EAAE;;AAEvH,oDAAoD,qCAAqC,gCAAgC,EAAE,EAAE;;AAE7H,sDAAsD,qCAAqC,kCAAkC,EAAE,EAAE;;AAEjI,iDAAiD,qCAAqC,6BAA6B,EAAE,EAAE;;AAEvH,6CAA6C,qCAAqC,yBAAyB,EAAE,EAAE;;AAE/G,yDAAyD,qCAAqC,qCAAqC,EAAE,EAAE;;AAEvI,wDAAwD,qCAAqC,oCAAoC,EAAE,EAAE;;AAErI,uDAAuD,qCAAqC,mCAAmC,EAAE,EAAE;;AAEnI,mDAAmD,qCAAqC,+BAA+B,EAAE,EAAE;;AAE3H,0DAA0D,qCAAqC,sCAAsC,EAAE,EAAE;;AAEzI,mDAAmD,qCAAqC,+BAA+B,EAAE,EAAE;;AAE3H,gDAAgD,qCAAqC,4BAA4B,EAAE,EAAE;;AAErH,kDAAkD,qCAAqC,8BAA8B,EAAE,EAAE;;AAEzH,4CAA4C,qCAAqC,wBAAwB,EAAE,EAAE;;AAE7G,iDAAiD,qCAAqC,6BAA6B,EAAE,EAAE;;AAEvH,qDAAqD,qCAAqC,iCAAiC,EAAE,EAAE;;AAE/H,wDAAwD,qCAAqC,oCAAoC,EAAE,EAAE;;AAErI,iDAAiD,qCAAqC,6BAA6B,EAAE,EAAE;;AAEvH,8CAA8C,qCAAqC,0BAA0B,EAAE,EAAE;;AAEjH,gEAAgE,qCAAqC,4CAA4C,EAAE,EAAE;;AAErJ,EAAE;;AAEF;AACA,+CAA+C,cAAc;AAC7D;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+BAA+B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF,EAAE;;AAEF;;AAEA;;AAEA,CAAC;;;;;;;;;AC3lDD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;;;ACtCA;AAAA;AAAwB;;AAET;AACf,WAAW,4CAAG;AACd,CAAC;;;;;;;;;ACJD;AAAA;AAAA;;;;;;;;ACAA,uC;;;;;;;;;;;;;;;;;ACAA,0BAA0B,aAAa,0BAA0B,wBAAwB,iBAAiB,6BAA6B,yBAAyB,KAAK,8BAA8B,iCAAiC,aAAa,oGAAoG,EAAE,wGAAwG,4DAA4D,iCAAiC,4BAA4B,+BAA+B,aAAa,gGAAgG,EAAE,oGAAoG,wDAAwD,2DAA2D,aAAa,oGAAoG,EAAE,wGAAwG,4DAA4D;AACprC;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,eAAM;AACf,kD;AACA;AACA;AACA;;AAEA,SAAS,iBAAQ;AACjB;AACA;AACA;AACA;;AAEA,SAAS,YAAG;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,eAAM,yDAAyD;;AAEnF;;AAEA;AACA,yBAAyB,YAAG;AAC5B;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,YAAG;AACd;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,UAAU;;AAE1C;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEe;;AAEf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,CAAC,EAAC;;;AC1IgC;AACnB,gEAAQ,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACiCqC;;AAE9C;;AAEf;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,QAAQ,6BAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,EAAC;;;ACtH8P,CAAgB,uGAAG,EAAC,C;;;;;;;;ACA9L;AAC3B;AACL;AACc;;;AAGpE;AAC6E;AAC7E,gBAAgB,8CAAU;AAC1B,EAAE,mCAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,6D;;ACnBiB;;AAEjB,0EAAO,E;;;;;;;ACFtB;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA,SAAS;AACT;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4DAA4D,WAAW,qBAAqB,aAAa,U;AACzG;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,iDAAiD,WAAW,wCAAwC,wBAAwB,WAAW,eAAe;AACtJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,cAAc;;AAE/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT;AACA,E","file":"CapsuleErrorReport.umd.vendors~bug-report.js","sourcesContent":["const EventTree = require(\"../lib/EventTree\");\n\nmodule.exports = {\n    id: 'html-valid-content-model',\n    description: 'Validates document content for proper structure, but also allows for document fragments.',\n    init(parser, reporter, options) {\n        new EventTree(parser, root => {\n            const html = root.findFirst('html');\n\n            // Enforce strict document model\n            if(html) {\n                // Throw error on all elements on the same level as the main <html> tag.\n                if(!html.isFirst()) {\n                    root.children.filter(child => child.tagName !== 'html')\n                        .forEach(child => {\n                            const { line, col, raw } = child;\n\n                            const message = `The [ ${child.tagName} ] cannot come ${child.isBefore(html) ? 'before' : 'after'} the html tag on line ${html.line}.`;\n\n                            reporter.error(message, line, col, this, raw);\n                        });\n                }\n\n                // Throw error for any duplicate html tag.\n                root.find('html')\n                    .filter(subject => subject !== html)\n                    .forEach(child => {\n                        const { line, col, raw } = child;\n\n                        const message = `Only one [ ${child.tagName} ] tag allowed per document.`;\n\n                        reporter.error(message, line, col, this, raw);\n                    });\n                \n                // Check to ensure only body and head tags are children of the html tag.\n                html.children.forEach(child => {\n                    if(!child.match('head', 'body')) {                        \n                        const { line, col, raw } = child;\n\n                        const message = `The [ ${child.tagName} ] tag is not allowed inside the html tag.`;\n\n                        reporter.error(message, line, col, this, raw);\n                    }\n                });\n            }\n                \n            // Check to ensure only head and children exist as children for html.\n            root.find('head', 'body')\n                .filter(child => {\n                    return !html || !child.isChildOf(html);\n                })\n                .forEach(child => {       \n                    const { line, col, raw } = child;\n\n                    const message = `The [ ${child.tagName} ] tag must be a child to the html tag.`;\n\n                    reporter.error(message, line, col, this, raw);\n                });\n\n            // Check for duplicate children inside the html tag\n            const htmlChildren = root.find('head', 'body').filter(child => {\n                return !html || child.isChildOf(html);\n            });\n\n            const bodyTags = htmlChildren.filter(child => child.tagName === 'body');\n            const headTags = htmlChildren.filter(child => child.tagName === 'head');\n\n            // Ensure the head and body are in the correct order.\n            if(bodyTags[0] && headTags[0] && bodyTags[0].isBefore(headTags[0])) {\n                const { line, col, raw } = bodyTags[0];\n\n                const message = `The [ ${bodyTags[0].tagName} ] tag must come after the head tag on line ${headTags[0].line}.`;\n\n                reporter.warn(message, line, col, this, raw);\n            }\n                \n            if(bodyTags[0] && headTags[0] && headTags[0].isAfter(bodyTags[0])) {\n                const { line, col, raw } = bodyTags[0];\n\n                const message = `The [ ${headTags[0].tagName} ] tag must come before the body tag on line ${bodyTags[0].line}.`;\n\n                reporter.warn(message, line, col, this, raw);\n            }\n\n            // Check for the remaining duplicates\n            bodyTags.splice(1).concat(headTags.splice(1))\n                .filter(child => html && child.isChildOf(html))\n                .forEach(child => {\n                    const { line, col, raw } = child;\n\n                    const message = `The [ ${child.tagName} ] tag is a duplicate to the tag on line ${htmlChildren.find(subject => child.tagName === subject.tagName).line}.`;\n\n                    reporter.error(message, line, col, this, raw);\n                });\n        });\n    }\n};","import HeadValidContentModel from './head-valid-content-model';\nimport HtmlValidContentModel from './html-valid-content-model';\nimport ValidPathFormat from './valid-path-format';\n\nexport const rules = {\n    'head-valid-content-model': HeadValidContentModel,\n    'html-valid-content-model': HtmlValidContentModel,\n    'valid-path-format': ValidPathFormat,\n};","import defaultConfig from './capsule.config.json';\nimport { HTMLHint } from 'htmlhint/dist/htmlhint';\nimport { rules } from './rules';\n\nObject.keys(rules).forEach((key) => {\n    HTMLHint.addRule(rules[key]);\n});\n\nfunction lint(html, config) {\n    return HTMLHint.verify(html, config || defaultConfig).map(error => {    \n        error.rule.link = error.rule.link.replace(\n            'https://github.com/thedaviddias/HTMLHint/wiki/',\n            'https://thecapsule.email/docs/codes/'\n        );\n\n        return error;\n    });\n}\n\nexport {\n    lint\n};","const EMPTY_TAGS = [\n    'area', 'base', 'basefont', 'br', 'col', 'frame', 'hr', 'img', 'input',\n    'isindex', 'link', 'meta', 'param', 'embed', 'track', 'command', 'source',\n    'keygen', 'wbr'\n];\n\nclass EventTree {\n    constructor(parser, finish) {\n        const stack = [];\n        \n        const root = new EventNode();\n        \n        let parentNode = root;\n\n        parser.addListener('tagstart', event => {\n            const node = new EventNode(event, parentNode);\n\n            parentNode.push(node);\n\n            if(!node.closed) {\n                stack.push(parentNode = node);\n            }\n        });\n\n        parser.addListener('tagend', event => {\n            const tagName = event.tagName.toLowerCase();\n            \n            let pos;\n\n            for(pos = stack.length - 1; pos >= 0; pos--) {\n                if(stack[pos].tagName === tagName) {\n                    break;\n                }\n            }\n\n            if(stack[pos]) {\n                parentNode = stack[pos].parent;\n                \n                stack[pos].closed = true;\n                stack.splice(pos, 1);\n            }\n        });\n\n        parser.addListener('end', event => {\n            root.closed = true;\n            \n            finish && finish(root);\n        });\n    }\n};\n\nclass EventNode {\n    constructor(event, parent) {\n        event = event || {};\n\n        const tagName = event.tagName && event.tagName.toLowerCase();\n\n        this.children = [];\n\n        if(this.root === parent) {\n            this.root = true;\n        }\n        else {\n            this.closed = !!event.close || EMPTY_TAGS.indexOf(tagName) > -1;\n            this.parent = parent;\n            this.tagName = tagName;\n            this.attrs = event.attrs;\n            this.col = event.col;\n            this.line = event.line;\n            this.raw = event.raw;\n        }\n    }\n\n    push(event) {\n        return this.children.push(event);\n    }\n\n    before(index) {\n        return this.children.slice(0, index);\n    }\n\n    after(index) {\n        return this.children.slice(index + 1);\n    }\n\n    find(...args) {\n        const find = children => {\n            return children.reduce((carry, child) => {\n                if(child.match(...args)) {\n                    carry.push(child);\n                }\n\n                if(child.children.length) {\n                    carry = carry.concat(find(child.children));\n                }\n\n                return carry;\n            }, []);\n        };\n\n        return find(this.children);\n    }\n\n    findFirst(tagName) {\n        return this.find(tagName)[0];\n    }\n\n    index() {\n        return this.parent ? this.parent.children.indexOf(this) : 0;\n    }\n\n    isChildOf(subject) {\n        return this.parent === subject;\n    }\n\n    isBefore(subject) {\n        return this.index() < subject.index();\n    }\n\n    isAfter(subject) {\n        return this.index() > subject.index();\n    }\n\n    isFirst() {\n        return !this.parent || this.index() === 0;\n    }\n\n    isLast() {\n        return !this.parent || this.index() === this.parent.children.length - 1;\n    }\n    \n    first() {\n        return this.children[0];\n    }\n\n    match(...args) {\n        return args.indexOf(this.tagName && this.tagName.toLowerCase()) > -1;\n    }\n\n};\n\nmodule.exports = EventTree;","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.to)?_c('router-link',{class:_vm.classes,attrs:{\"to\":_vm.to,\"disabled\":_vm.disabled,\"role\":\"button\"},on:{\"click\":_vm.onClick}},[_vm._t(\"default\")],2):(_vm.href)?_c('a',{class:_vm.classes,attrs:{\"href\":_vm.href,\"disabled\":_vm.disabled,\"role\":\"button\"},on:{\"click\":_vm.onClick}},[_vm._t(\"default\")],2):(_vm.label)?_c('label',{class:_vm.classes,attrs:{\"disabled\":_vm.disabled,\"role\":\"button\"},on:{\"click\":_vm.onClick}},[_vm._t(\"default\")],2):_c('button',{class:_vm.classes,attrs:{\"type\":_vm.type,\"disabled\":_vm.disabled},on:{\"click\":_vm.onClick}},[_vm._t(\"default\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <router-link\n        v-if=\"to\"\n        :to=\"to\"\n        :disabled=\"disabled\"\n        :class=\"classes\"\n        role=\"button\"\n        @click=\"onClick\">\n        <slot />\n    </router-link>\n    <a\n        v-else-if=\"href\"\n        :href=\"href\"\n        :disabled=\"disabled\"\n        :class=\"classes\"\n        role=\"button\"\n        @click=\"onClick\">\n        <slot />\n    </a>\n    <label v-else-if=\"label\" :disabled=\"disabled\" :class=\"classes\" role=\"button\" @click=\"onClick\">\n        <slot />\n    </label>\n    <button v-else :type=\"type\" :disabled=\"disabled\" :class=\"classes\" @click=\"onClick\">\n        <slot />\n    </button>\n</template>\n\n<script>\nimport { kebabCase } from '@vue-interface/utils';\nimport Sizeable from '@vue-interface/sizeable';\nimport Variant from '@vue-interface/variant';\n\nexport default {\n\n    name: 'Btn',\n\n    mixins: [\n        Sizeable,\n        Variant,\n    ],\n\n    props: {\n\n        /**\n         * Display button with active state\n         *\n         * @property String\n         */\n        active: Boolean,\n\n        /**\n         * Display button with blocked state\n         *\n         * @property String\n         */\n        block: Boolean,\n\n        /**\n         * Display button with disabled state\n         *\n         * @property String\n         */\n        disabled: Boolean,\n\n        /**\n         * If an href is passed, button is an router-link element\n         *\n         * @property Boolean\n         */\n        href: String,\n\n        /**\n         * Should use <label> as the element for the button. Used for inputs\n         * wrappers (toggles).\n         *\n         * @property Boolean\n         */\n        label: Boolean,\n\n        /**\n         * Display as an outline button\n         *\n         * @property String\n         */\n        outline: Boolean,\n\n        /**\n         * If an to is passed, button is an router-link element\n         *\n         * @property Boolean\n         */\n        to: [Object, String],\n\n        /**\n         * The type attribute for the button. Not applied if an anchor\n         *\n         * @property String\n         */\n        type: String\n\n    },\n\n    computed: {\n\n        variantClassPrefix() {\n            return kebabCase(this.$options.name) + (this.outline ? '-outline' : '');\n        },\n\n        classes() {\n            return {\n                'active': this.active,\n                'btn': true,\n                'btn-block': this.block,\n                [this.variantClass]: !!this.variantClass,\n                [this.sizeableClass]: !!this.sizeableClass,\n                [this.colorableClasses]: !!this.colorableClasses,\n            };\n        }\n\n    },\n\n    methods: {\n\n        onClick(event) {\n            if(!this.disabled) {\n                this.$emit('click', event);\n            }\n            else {\n                event.preventDefault();\n            }\n        }\n\n    }\n\n};\n</script>\n","import mod from \"-!../../../cache-loader/dist/cjs.js??ref--12-0!../../../thread-loader/dist/cjs.js!../../../babel-loader/lib/index.js!../../../cache-loader/dist/cjs.js??ref--0-0!../../../vue-loader/lib/index.js??vue-loader-options!./Btn.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../cache-loader/dist/cjs.js??ref--12-0!../../../thread-loader/dist/cjs.js!../../../babel-loader/lib/index.js!../../../cache-loader/dist/cjs.js??ref--0-0!../../../vue-loader/lib/index.js??vue-loader-options!./Btn.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Btn.vue?vue&type=template&id=dfb20136&\"\nimport script from \"./Btn.vue?vue&type=script&lang=js&\"\nexport * from \"./Btn.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Btn from './src/Btn';\nexport default Btn;","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global = global || self, global.HTMLHint = factory());\n}(this, (function () { 'use strict';\n\n\tvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\tfunction unwrapExports (x) {\n\t\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n\t}\n\n\tfunction createCommonjsModule(fn, basedir, module) {\n\t\treturn module = {\n\t\t  path: basedir,\n\t\t  exports: {},\n\t\t  require: function (path, base) {\n\t      return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n\t    }\n\t\t}, fn(module, module.exports), module.exports;\n\t}\n\n\tfunction commonjsRequire () {\n\t\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n\t}\n\n\tvar htmlparser = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar HTMLParser = (function () {\n\t    function HTMLParser() {\n\t        this._listeners = {};\n\t        this._mapCdataTags = this.makeMap('script,style');\n\t        this._arrBlocks = [];\n\t        this.lastEvent = null;\n\t    }\n\t    HTMLParser.prototype.makeMap = function (str) {\n\t        var obj = {};\n\t        var items = str.split(',');\n\t        for (var i = 0; i < items.length; i++) {\n\t            obj[items[i]] = true;\n\t        }\n\t        return obj;\n\t    };\n\t    HTMLParser.prototype.parse = function (html) {\n\t        var _this = this;\n\t        var mapCdataTags = this._mapCdataTags;\n\t        var regTag = /<(?:\\/([^\\s>]+)\\s*|!--([\\s\\S]*?)--|!([^>]*?)|([\\w\\-:]+)((?:\\s+[^\\s\"'>\\/=\\x00-\\x0F\\x7F\\x80-\\x9F]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s\"'>]*))?)*?)\\s*(\\/?))>/g;\n\t        var regAttr = /\\s*([^\\s\"'>\\/=\\x00-\\x0F\\x7F\\x80-\\x9F]+)(?:\\s*=\\s*(?:(\")([^\"]*)\"|(')([^']*)'|([^\\s\"'>]*)))?/g;\n\t        var regLine = /\\r?\\n/g;\n\t        var match;\n\t        var matchIndex;\n\t        var lastIndex = 0;\n\t        var tagName;\n\t        var arrAttrs;\n\t        var tagCDATA = null;\n\t        var attrsCDATA;\n\t        var arrCDATA = [];\n\t        var lastCDATAIndex = 0;\n\t        var text;\n\t        var lastLineIndex = 0;\n\t        var line = 1;\n\t        var arrBlocks = this._arrBlocks;\n\t        this.fire('start', {\n\t            pos: 0,\n\t            line: 1,\n\t            col: 1,\n\t        });\n\t        var isMapCdataTagsRequired = function () {\n\t            var attrType = arrAttrs.find(function (attr) { return attr.name === 'type'; }) || {\n\t                value: '',\n\t            };\n\t            return (mapCdataTags[tagName] &&\n\t                attrType.value.indexOf('text/ng-template') === -1);\n\t        };\n\t        var saveBlock = function (type, raw, pos, data) {\n\t            var col = pos - lastLineIndex + 1;\n\t            if (data === undefined) {\n\t                data = {};\n\t            }\n\t            data.raw = raw;\n\t            data.pos = pos;\n\t            data.line = line;\n\t            data.col = col;\n\t            arrBlocks.push(data);\n\t            _this.fire(type, data);\n\t            var lineMatch;\n\t            while ((lineMatch = regLine.exec(raw))) {\n\t                line++;\n\t                lastLineIndex = pos + regLine.lastIndex;\n\t            }\n\t        };\n\t        while ((match = regTag.exec(html))) {\n\t            matchIndex = match.index;\n\t            if (matchIndex > lastIndex) {\n\t                text = html.substring(lastIndex, matchIndex);\n\t                if (tagCDATA) {\n\t                    arrCDATA.push(text);\n\t                }\n\t                else {\n\t                    saveBlock('text', text, lastIndex);\n\t                }\n\t            }\n\t            lastIndex = regTag.lastIndex;\n\t            if ((tagName = match[1])) {\n\t                if (tagCDATA && tagName === tagCDATA) {\n\t                    text = arrCDATA.join('');\n\t                    saveBlock('cdata', text, lastCDATAIndex, {\n\t                        tagName: tagCDATA,\n\t                        attrs: attrsCDATA,\n\t                    });\n\t                    tagCDATA = null;\n\t                    attrsCDATA = undefined;\n\t                    arrCDATA = [];\n\t                }\n\t                if (!tagCDATA) {\n\t                    saveBlock('tagend', match[0], matchIndex, {\n\t                        tagName: tagName,\n\t                    });\n\t                    continue;\n\t                }\n\t            }\n\t            if (tagCDATA) {\n\t                arrCDATA.push(match[0]);\n\t            }\n\t            else {\n\t                if ((tagName = match[4])) {\n\t                    arrAttrs = [];\n\t                    var attrs = match[5];\n\t                    var attrMatch = void 0;\n\t                    var attrMatchCount = 0;\n\t                    while ((attrMatch = regAttr.exec(attrs))) {\n\t                        var name_1 = attrMatch[1];\n\t                        var quote = attrMatch[2]\n\t                            ? attrMatch[2]\n\t                            : attrMatch[4]\n\t                                ? attrMatch[4]\n\t                                : '';\n\t                        var value = attrMatch[3]\n\t                            ? attrMatch[3]\n\t                            : attrMatch[5]\n\t                                ? attrMatch[5]\n\t                                : attrMatch[6]\n\t                                    ? attrMatch[6]\n\t                                    : '';\n\t                        arrAttrs.push({\n\t                            name: name_1,\n\t                            value: value,\n\t                            quote: quote,\n\t                            index: attrMatch.index,\n\t                            raw: attrMatch[0],\n\t                        });\n\t                        attrMatchCount += attrMatch[0].length;\n\t                    }\n\t                    if (attrMatchCount === attrs.length) {\n\t                        saveBlock('tagstart', match[0], matchIndex, {\n\t                            tagName: tagName,\n\t                            attrs: arrAttrs,\n\t                            close: match[6],\n\t                        });\n\t                        if (isMapCdataTagsRequired()) {\n\t                            tagCDATA = tagName;\n\t                            attrsCDATA = arrAttrs.concat();\n\t                            arrCDATA = [];\n\t                            lastCDATAIndex = lastIndex;\n\t                        }\n\t                    }\n\t                    else {\n\t                        saveBlock('text', match[0], matchIndex);\n\t                    }\n\t                }\n\t                else if (match[2] || match[3]) {\n\t                    saveBlock('comment', match[0], matchIndex, {\n\t                        content: match[2] || match[3],\n\t                        long: match[2] ? true : false,\n\t                    });\n\t                }\n\t            }\n\t        }\n\t        if (html.length > lastIndex) {\n\t            text = html.substring(lastIndex, html.length);\n\t            saveBlock('text', text, lastIndex);\n\t        }\n\t        this.fire('end', {\n\t            pos: lastIndex,\n\t            line: line,\n\t            col: html.length - lastLineIndex + 1,\n\t        });\n\t    };\n\t    HTMLParser.prototype.addListener = function (types, listener) {\n\t        var _listeners = this._listeners;\n\t        var arrTypes = types.split(/[,\\s]/);\n\t        var type;\n\t        for (var i = 0, l = arrTypes.length; i < l; i++) {\n\t            type = arrTypes[i];\n\t            if (_listeners[type] === undefined) {\n\t                _listeners[type] = [];\n\t            }\n\t            _listeners[type].push(listener);\n\t        }\n\t    };\n\t    HTMLParser.prototype.fire = function (type, data) {\n\t        if (data === undefined) {\n\t            data = {};\n\t        }\n\t        data.type = type;\n\t        var listeners = [];\n\t        var listenersType = this._listeners[type];\n\t        var listenersAll = this._listeners['all'];\n\t        if (listenersType !== undefined) {\n\t            listeners = listeners.concat(listenersType);\n\t        }\n\t        if (listenersAll !== undefined) {\n\t            listeners = listeners.concat(listenersAll);\n\t        }\n\t        var lastEvent = this.lastEvent;\n\t        if (lastEvent !== null) {\n\t            delete lastEvent['lastEvent'];\n\t            data.lastEvent = lastEvent;\n\t        }\n\t        this.lastEvent = data;\n\t        for (var i = 0, l = listeners.length; i < l; i++) {\n\t            listeners[i].call(this, data);\n\t        }\n\t    };\n\t    HTMLParser.prototype.removeListener = function (type, listener) {\n\t        var listenersType = this._listeners[type];\n\t        if (listenersType !== undefined) {\n\t            for (var i = 0, l = listenersType.length; i < l; i++) {\n\t                if (listenersType[i] === listener) {\n\t                    listenersType.splice(i, 1);\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t    };\n\t    HTMLParser.prototype.fixPos = function (event, index) {\n\t        var text = event.raw.substr(0, index);\n\t        var arrLines = text.split(/\\r?\\n/);\n\t        var lineCount = arrLines.length - 1;\n\t        var line = event.line;\n\t        var col;\n\t        if (lineCount > 0) {\n\t            line += lineCount;\n\t            col = arrLines[lineCount].length + 1;\n\t        }\n\t        else {\n\t            col = event.col + index;\n\t        }\n\t        return {\n\t            line: line,\n\t            col: col,\n\t        };\n\t    };\n\t    HTMLParser.prototype.getMapAttrs = function (arrAttrs) {\n\t        var mapAttrs = {};\n\t        var attr;\n\t        for (var i = 0, l = arrAttrs.length; i < l; i++) {\n\t            attr = arrAttrs[i];\n\t            mapAttrs[attr.name] = attr.value;\n\t        }\n\t        return mapAttrs;\n\t    };\n\t    return HTMLParser;\n\t}());\n\texports.default = HTMLParser;\n\n\t});\n\n\tvar reporter = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar Reporter = (function () {\n\t    function Reporter(html, ruleset) {\n\t        this.html = html;\n\t        this.lines = html.split(/\\r?\\n/);\n\t        var match = /\\r?\\n/.exec(html);\n\t        this.brLen = match !== null ? match[0].length : 0;\n\t        this.ruleset = ruleset;\n\t        this.messages = [];\n\t    }\n\t    Reporter.prototype.info = function (message, line, col, rule, raw) {\n\t        this.report(\"info\", message, line, col, rule, raw);\n\t    };\n\t    Reporter.prototype.warn = function (message, line, col, rule, raw) {\n\t        this.report(\"warning\", message, line, col, rule, raw);\n\t    };\n\t    Reporter.prototype.error = function (message, line, col, rule, raw) {\n\t        this.report(\"error\", message, line, col, rule, raw);\n\t    };\n\t    Reporter.prototype.report = function (type, message, line, col, rule, raw) {\n\t        var lines = this.lines;\n\t        var brLen = this.brLen;\n\t        var evidence = '';\n\t        var evidenceLen = 0;\n\t        for (var i = line - 1, lineCount = lines.length; i < lineCount; i++) {\n\t            evidence = lines[i];\n\t            evidenceLen = evidence.length;\n\t            if (col > evidenceLen && line < lineCount) {\n\t                line++;\n\t                col -= evidenceLen;\n\t                if (col !== 1) {\n\t                    col -= brLen;\n\t                }\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        this.messages.push({\n\t            type: type,\n\t            message: message,\n\t            raw: raw,\n\t            evidence: evidence,\n\t            line: line,\n\t            col: col,\n\t            rule: {\n\t                id: rule.id,\n\t                description: rule.description,\n\t                link: \"https://github.com/thedaviddias/HTMLHint/wiki/\" + rule.id,\n\t            },\n\t        });\n\t    };\n\t    return Reporter;\n\t}());\n\texports.default = Reporter;\n\n\t});\n\n\tvar altRequire = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'alt-require',\n\t    description: 'The alt attribute of an <img> element must be present and alt attribute of area[href] and input[type=image] must have a value.',\n\t    init: function (parser, reporter) {\n\t        var _this = this;\n\t        parser.addListener('tagstart', function (event) {\n\t            var tagName = event.tagName.toLowerCase();\n\t            var mapAttrs = parser.getMapAttrs(event.attrs);\n\t            var col = event.col + tagName.length + 1;\n\t            var selector;\n\t            if (tagName === 'img' && !('alt' in mapAttrs)) {\n\t                reporter.warn('An alt attribute must be present on <img> elements.', event.line, col, _this, event.raw);\n\t            }\n\t            else if ((tagName === 'area' && 'href' in mapAttrs) ||\n\t                (tagName === 'input' && mapAttrs['type'] === 'image')) {\n\t                if (!('alt' in mapAttrs) || mapAttrs['alt'] === '') {\n\t                    selector = tagName === 'area' ? 'area[href]' : 'input[type=image]';\n\t                    reporter.warn(\"The alt attribute of \" + selector + \" must have a value.\", event.line, col, _this, event.raw);\n\t                }\n\t            }\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar attrLowercase = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tfunction testAgainstStringOrRegExp(value, comparison) {\n\t    if (comparison instanceof RegExp) {\n\t        return comparison.test(value)\n\t            ? { match: value, pattern: comparison }\n\t            : false;\n\t    }\n\t    var firstComparisonChar = comparison[0];\n\t    var lastComparisonChar = comparison[comparison.length - 1];\n\t    var secondToLastComparisonChar = comparison[comparison.length - 2];\n\t    var comparisonIsRegex = firstComparisonChar === '/' &&\n\t        (lastComparisonChar === '/' ||\n\t            (secondToLastComparisonChar === '/' && lastComparisonChar === 'i'));\n\t    var hasCaseInsensitiveFlag = comparisonIsRegex && lastComparisonChar === 'i';\n\t    if (comparisonIsRegex) {\n\t        var valueMatches = hasCaseInsensitiveFlag\n\t            ? new RegExp(comparison.slice(1, -2), 'i').test(value)\n\t            : new RegExp(comparison.slice(1, -1)).test(value);\n\t        return valueMatches;\n\t    }\n\t    return value === comparison;\n\t}\n\texports.default = {\n\t    id: 'attr-lowercase',\n\t    description: 'All attribute names must be in lowercase.',\n\t    init: function (parser, reporter, options) {\n\t        var _this = this;\n\t        var exceptions = Array.isArray(options) ? options : [];\n\t        parser.addListener('tagstart', function (event) {\n\t            var attrs = event.attrs;\n\t            var attr;\n\t            var col = event.col + event.tagName.length + 1;\n\t            var _loop_1 = function (i, l) {\n\t                attr = attrs[i];\n\t                var attrName = attr.name;\n\t                if (!exceptions.find(function (exp) { return testAgainstStringOrRegExp(attrName, exp); }) &&\n\t                    attrName !== attrName.toLowerCase()) {\n\t                    reporter.error(\"The attribute name of [ \" + attrName + \" ] must be in lowercase.\", event.line, col + attr.index, _this, attr.raw);\n\t                }\n\t            };\n\t            for (var i = 0, l = attrs.length; i < l; i++) {\n\t                _loop_1(i);\n\t            }\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar attrSorted = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'attr-sorted',\n\t    description: 'Attribute tags must be in proper order.',\n\t    init: function (parser, reporter) {\n\t        var _this = this;\n\t        var orderMap = {};\n\t        var sortOrder = [\n\t            'class',\n\t            'id',\n\t            'name',\n\t            'src',\n\t            'for',\n\t            'type',\n\t            'href',\n\t            'value',\n\t            'title',\n\t            'alt',\n\t            'role',\n\t        ];\n\t        for (var i = 0; i < sortOrder.length; i++) {\n\t            orderMap[sortOrder[i]] = i;\n\t        }\n\t        parser.addListener('tagstart', function (event) {\n\t            var attrs = event.attrs;\n\t            var listOfAttributes = [];\n\t            for (var i = 0; i < attrs.length; i++) {\n\t                listOfAttributes.push(attrs[i].name);\n\t            }\n\t            var originalAttrs = JSON.stringify(listOfAttributes);\n\t            listOfAttributes.sort(function (a, b) {\n\t                if (orderMap[a] == undefined && orderMap[b] == undefined) {\n\t                    return 0;\n\t                }\n\t                if (orderMap[a] == undefined) {\n\t                    return 1;\n\t                }\n\t                else if (orderMap[b] == undefined) {\n\t                    return -1;\n\t                }\n\t                return orderMap[a] - orderMap[b] || a.localeCompare(b);\n\t            });\n\t            if (originalAttrs !== JSON.stringify(listOfAttributes)) {\n\t                reporter.error(\"Inaccurate order \" + originalAttrs + \" should be in hierarchy \" + JSON.stringify(listOfAttributes) + \" \", event.line, event.col, _this, event.raw);\n\t            }\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar attrNoDuplication = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'attr-no-duplication',\n\t    description: 'Elements cannot have duplicate attributes.',\n\t    init: function (parser, reporter) {\n\t        var _this = this;\n\t        parser.addListener('tagstart', function (event) {\n\t            var attrs = event.attrs;\n\t            var attr;\n\t            var attrName;\n\t            var col = event.col + event.tagName.length + 1;\n\t            var mapAttrName = {};\n\t            for (var i = 0, l = attrs.length; i < l; i++) {\n\t                attr = attrs[i];\n\t                attrName = attr.name;\n\t                if (mapAttrName[attrName] === true) {\n\t                    reporter.error(\"Duplicate of attribute name [ \" + attr.name + \" ] was found.\", event.line, col + attr.index, _this, attr.raw);\n\t                }\n\t                mapAttrName[attrName] = true;\n\t            }\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar attrUnsafeChars = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'attr-unsafe-chars',\n\t    description: 'Attribute values cannot contain unsafe chars.',\n\t    init: function (parser, reporter) {\n\t        var _this = this;\n\t        parser.addListener('tagstart', function (event) {\n\t            var attrs = event.attrs;\n\t            var attr;\n\t            var col = event.col + event.tagName.length + 1;\n\t            var regUnsafe = /[\\u0000-\\u0008\\u000b\\u000c\\u000e-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/;\n\t            var match;\n\t            for (var i = 0, l = attrs.length; i < l; i++) {\n\t                attr = attrs[i];\n\t                match = regUnsafe.exec(attr.value);\n\t                if (match !== null) {\n\t                    var unsafeCode = escape(match[0])\n\t                        .replace(/%u/, '\\\\u')\n\t                        .replace(/%/, '\\\\x');\n\t                    reporter.warn(\"The value of attribute [ \" + attr.name + \" ] cannot contain an unsafe char [ \" + unsafeCode + \" ].\", event.line, col + attr.index, _this, attr.raw);\n\t                }\n\t            }\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar attrValueDoubleQuotes = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'attr-value-double-quotes',\n\t    description: 'Attribute values must be in double quotes.',\n\t    init: function (parser, reporter) {\n\t        var _this = this;\n\t        parser.addListener('tagstart', function (event) {\n\t            var attrs = event.attrs;\n\t            var attr;\n\t            var col = event.col + event.tagName.length + 1;\n\t            for (var i = 0, l = attrs.length; i < l; i++) {\n\t                attr = attrs[i];\n\t                if ((attr.value !== '' && attr.quote !== '\"') ||\n\t                    (attr.value === '' && attr.quote === \"'\")) {\n\t                    reporter.error(\"The value of attribute [ \" + attr.name + \" ] must be in double quotes.\", event.line, col + attr.index, _this, attr.raw);\n\t                }\n\t            }\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar attrValueNotEmpty = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'attr-value-not-empty',\n\t    description: 'All attributes must have values.',\n\t    init: function (parser, reporter) {\n\t        var _this = this;\n\t        parser.addListener('tagstart', function (event) {\n\t            var attrs = event.attrs;\n\t            var attr;\n\t            var col = event.col + event.tagName.length + 1;\n\t            for (var i = 0, l = attrs.length; i < l; i++) {\n\t                attr = attrs[i];\n\t                if (attr.quote === '' && attr.value === '') {\n\t                    reporter.warn(\"The attribute [ \" + attr.name + \" ] must have a value.\", event.line, col + attr.index, _this, attr.raw);\n\t                }\n\t            }\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar attrValueSingleQuotes = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'attr-value-single-quotes',\n\t    description: 'Attribute values must be in single quotes.',\n\t    init: function (parser, reporter) {\n\t        var _this = this;\n\t        parser.addListener('tagstart', function (event) {\n\t            var attrs = event.attrs;\n\t            var attr;\n\t            var col = event.col + event.tagName.length + 1;\n\t            for (var i = 0, l = attrs.length; i < l; i++) {\n\t                attr = attrs[i];\n\t                if ((attr.value !== '' && attr.quote !== \"'\") ||\n\t                    (attr.value === '' && attr.quote === '\"')) {\n\t                    reporter.error(\"The value of attribute [ \" + attr.name + \" ] must be in single quotes.\", event.line, col + attr.index, _this, attr.raw);\n\t                }\n\t            }\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar attrWhitespace = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'attr-whitespace',\n\t    description: 'All attributes should be separated by only one space and not have leading/trailing whitespace.',\n\t    init: function (parser, reporter, options) {\n\t        var _this = this;\n\t        var exceptions = Array.isArray(options)\n\t            ? options\n\t            : [];\n\t        parser.addListener('tagstart', function (event) {\n\t            var attrs = event.attrs;\n\t            var attr;\n\t            var col = event.col + event.tagName.length + 1;\n\t            attrs.forEach(function (elem) {\n\t                attr = elem;\n\t                var attrName = elem.name;\n\t                if (exceptions.indexOf(attrName) !== -1) {\n\t                    return;\n\t                }\n\t                if (elem.value.trim() !== elem.value) {\n\t                    reporter.error(\"The attributes of [ \" + attrName + \" ] must not have trailing whitespace.\", event.line, col + attr.index, _this, attr.raw);\n\t                }\n\t                if (elem.value.replace(/ +(?= )/g, '') !== elem.value) {\n\t                    reporter.error(\"The attributes of [ \" + attrName + \" ] must be separated by only one space.\", event.line, col + attr.index, _this, attr.raw);\n\t                }\n\t            });\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar doctypeFirst = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'doctype-first',\n\t    description: 'Doctype must be declared first.',\n\t    init: function (parser, reporter) {\n\t        var _this = this;\n\t        var allEvent = function (event) {\n\t            if (event.type === 'start' ||\n\t                (event.type === 'text' && /^\\s*$/.test(event.raw))) {\n\t                return;\n\t            }\n\t            if ((event.type !== 'comment' && event.long === false) ||\n\t                /^DOCTYPE\\s+/i.test(event.content) === false) {\n\t                reporter.error('Doctype must be declared first.', event.line, event.col, _this, event.raw);\n\t            }\n\t            parser.removeListener('all', allEvent);\n\t        };\n\t        parser.addListener('all', allEvent);\n\t    },\n\t};\n\n\t});\n\n\tvar doctypeHtml5 = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'doctype-html5',\n\t    description: 'Invalid doctype. Use: \"<!DOCTYPE html>\"',\n\t    init: function (parser, reporter) {\n\t        var _this = this;\n\t        var onComment = function (event) {\n\t            if (event.long === false &&\n\t                event.content.toLowerCase() !== 'doctype html') {\n\t                reporter.warn('Invalid doctype. Use: \"<!DOCTYPE html>\"', event.line, event.col, _this, event.raw);\n\t            }\n\t        };\n\t        var onTagStart = function () {\n\t            parser.removeListener('comment', onComment);\n\t            parser.removeListener('tagstart', onTagStart);\n\t        };\n\t        parser.addListener('all', onComment);\n\t        parser.addListener('tagstart', onTagStart);\n\t    },\n\t};\n\n\t});\n\n\tvar headScriptDisabled = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'head-script-disabled',\n\t    description: 'The <script> tag cannot be used in a <head> tag.',\n\t    init: function (parser, reporter) {\n\t        var _this = this;\n\t        var reScript = /^(text\\/javascript|application\\/javascript)$/i;\n\t        var isInHead = false;\n\t        var onTagStart = function (event) {\n\t            var mapAttrs = parser.getMapAttrs(event.attrs);\n\t            var type = mapAttrs.type;\n\t            var tagName = event.tagName.toLowerCase();\n\t            if (tagName === 'head') {\n\t                isInHead = true;\n\t            }\n\t            if (isInHead === true &&\n\t                tagName === 'script' &&\n\t                (!type || reScript.test(type) === true)) {\n\t                reporter.warn('The <script> tag cannot be used in a <head> tag.', event.line, event.col, _this, event.raw);\n\t            }\n\t        };\n\t        var onTagEnd = function (event) {\n\t            if (event.tagName.toLowerCase() === 'head') {\n\t                parser.removeListener('tagstart', onTagStart);\n\t                parser.removeListener('tagend', onTagEnd);\n\t            }\n\t        };\n\t        parser.addListener('tagstart', onTagStart);\n\t        parser.addListener('tagend', onTagEnd);\n\t    },\n\t};\n\n\t});\n\n\tvar hrefAbsOrRel = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'href-abs-or-rel',\n\t    description: 'An href attribute must be either absolute or relative.',\n\t    init: function (parser, reporter, options) {\n\t        var _this = this;\n\t        var hrefMode = options === 'abs' ? 'absolute' : 'relative';\n\t        parser.addListener('tagstart', function (event) {\n\t            var attrs = event.attrs;\n\t            var attr;\n\t            var col = event.col + event.tagName.length + 1;\n\t            for (var i = 0, l = attrs.length; i < l; i++) {\n\t                attr = attrs[i];\n\t                if (attr.name === 'href') {\n\t                    if ((hrefMode === 'absolute' && /^\\w+?:/.test(attr.value) === false) ||\n\t                        (hrefMode === 'relative' &&\n\t                            /^https?:\\/\\//.test(attr.value) === true)) {\n\t                        reporter.warn(\"The value of the href attribute [ \" + attr.value + \" ] must be \" + hrefMode + \".\", event.line, col + attr.index, _this, attr.raw);\n\t                    }\n\t                    break;\n\t                }\n\t            }\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar htmlLangRequire = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar regular = '(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang)';\n\tvar irregular = '(en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)';\n\tvar grandfathered = \"(?<grandfathered>\" + irregular + \"|\" + regular + \")\";\n\tvar privateUse = '(?<privateUse>x(-[A-Za-z0-9]{1,8})+)';\n\tvar privateUse2 = '(?<privateUse2>x(-[A-Za-z0-9]{1,8})+)';\n\tvar singleton = '[0-9A-WY-Za-wy-z]';\n\tvar extension = \"(?<extension>\" + singleton + \"(-[A-Za-z0-9]{2,8})+)\";\n\tvar variant = '(?<variant>[A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3})';\n\tvar region = '(?<region>[A-Za-z]{2}|[0-9]{3})';\n\tvar script = '(?<script>[A-Za-z]{4})';\n\tvar extlang = '(?<extlang>[A-Za-z]{3}(-[A-Za-z]{3}){0,2})';\n\tvar language = \"(?<language>([A-Za-z]{2,3}(-\" + extlang + \")?)|[A-Za-z]{4}|[A-Za-z]{5,8})\";\n\tvar langtag = \"(\" + language + \"(-\" + script + \")?\" +\n\t    (\"(-\" + region + \")?\") +\n\t    (\"(-\" + variant + \")*\") +\n\t    (\"(-\" + extension + \")*\") +\n\t    (\"(-\" + privateUse + \")?\") +\n\t    ')';\n\tvar languageTag = \"(\" + grandfathered + \"|\" + langtag + \"|\" + privateUse2 + \")\";\n\texports.default = {\n\t    id: 'html-lang-require',\n\t    description: 'The lang attribute of an <html> element must be present and should be valid.',\n\t    init: function (parser, reporter) {\n\t        var _this = this;\n\t        parser.addListener('tagstart', function (event) {\n\t            var tagName = event.tagName.toLowerCase();\n\t            var mapAttrs = parser.getMapAttrs(event.attrs);\n\t            var col = event.col + tagName.length + 1;\n\t            var langValidityPattern = new RegExp(languageTag, 'g');\n\t            if (tagName === 'html') {\n\t                if ('lang' in mapAttrs) {\n\t                    if (!mapAttrs['lang']) {\n\t                        reporter.warn('The lang attribute of <html> element must have a value.', event.line, col, _this, event.raw);\n\t                    }\n\t                    else if (!langValidityPattern.test(mapAttrs['lang'])) {\n\t                        reporter.warn('The lang attribute value of <html> element must be a valid BCP47.', event.line, col, _this, event.raw);\n\t                    }\n\t                }\n\t                else {\n\t                    reporter.warn('An lang attribute must be present on <html> elements.', event.line, col, _this, event.raw);\n\t                }\n\t            }\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar idClassAdDisabled = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'id-class-ad-disabled',\n\t    description: 'The id and class attributes cannot use the ad keyword, it will be blocked by adblock software.',\n\t    init: function (parser, reporter) {\n\t        var _this = this;\n\t        parser.addListener('tagstart', function (event) {\n\t            var attrs = event.attrs;\n\t            var attr;\n\t            var attrName;\n\t            var col = event.col + event.tagName.length + 1;\n\t            for (var i = 0, l = attrs.length; i < l; i++) {\n\t                attr = attrs[i];\n\t                attrName = attr.name;\n\t                if (/^(id|class)$/i.test(attrName)) {\n\t                    if (/(^|[-_])ad([-_]|$)/i.test(attr.value)) {\n\t                        reporter.warn(\"The value of attribute \" + attrName + \" cannot use the ad keyword.\", event.line, col + attr.index, _this, attr.raw);\n\t                    }\n\t                }\n\t            }\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar idClassValue = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'id-class-value',\n\t    description: 'The id and class attribute values must meet the specified rules.',\n\t    init: function (parser, reporter, options) {\n\t        var _this = this;\n\t        var arrRules = {\n\t            underline: {\n\t                regId: /^[a-z\\d]+(_[a-z\\d]+)*$/,\n\t                message: 'The id and class attribute values must be in lowercase and split by an underscore.',\n\t            },\n\t            dash: {\n\t                regId: /^[a-z\\d]+(-[a-z\\d]+)*$/,\n\t                message: 'The id and class attribute values must be in lowercase and split by a dash.',\n\t            },\n\t            hump: {\n\t                regId: /^[a-z][a-zA-Z\\d]*([A-Z][a-zA-Z\\d]*)*$/,\n\t                message: 'The id and class attribute values must meet the camelCase style.',\n\t            },\n\t        };\n\t        var rule;\n\t        if (typeof options === 'string') {\n\t            rule = arrRules[options];\n\t        }\n\t        else {\n\t            rule = options;\n\t        }\n\t        if (typeof rule === 'object' && rule.regId) {\n\t            var regId_1 = rule.regId;\n\t            var message_1 = rule.message;\n\t            if (!(regId_1 instanceof RegExp)) {\n\t                regId_1 = new RegExp(regId_1);\n\t            }\n\t            parser.addListener('tagstart', function (event) {\n\t                var attrs = event.attrs;\n\t                var attr;\n\t                var col = event.col + event.tagName.length + 1;\n\t                for (var i = 0, l1 = attrs.length; i < l1; i++) {\n\t                    attr = attrs[i];\n\t                    if (attr.name.toLowerCase() === 'id') {\n\t                        if (regId_1.test(attr.value) === false) {\n\t                            reporter.warn(message_1, event.line, col + attr.index, _this, attr.raw);\n\t                        }\n\t                    }\n\t                    if (attr.name.toLowerCase() === 'class') {\n\t                        var arrClass = attr.value.split(/\\s+/g);\n\t                        var classValue = void 0;\n\t                        for (var j = 0, l2 = arrClass.length; j < l2; j++) {\n\t                            classValue = arrClass[j];\n\t                            if (classValue && regId_1.test(classValue) === false) {\n\t                                reporter.warn(message_1, event.line, col + attr.index, _this, classValue);\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t            });\n\t        }\n\t    },\n\t};\n\n\t});\n\n\tvar idUnique = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'id-unique',\n\t    description: 'The value of id attributes must be unique.',\n\t    init: function (parser, reporter) {\n\t        var _this = this;\n\t        var mapIdCount = {};\n\t        parser.addListener('tagstart', function (event) {\n\t            var attrs = event.attrs;\n\t            var attr;\n\t            var id;\n\t            var col = event.col + event.tagName.length + 1;\n\t            for (var i = 0, l = attrs.length; i < l; i++) {\n\t                attr = attrs[i];\n\t                if (attr.name.toLowerCase() === 'id') {\n\t                    id = attr.value;\n\t                    if (id) {\n\t                        if (mapIdCount[id] === undefined) {\n\t                            mapIdCount[id] = 1;\n\t                        }\n\t                        else {\n\t                            mapIdCount[id]++;\n\t                        }\n\t                        if (mapIdCount[id] > 1) {\n\t                            reporter.error(\"The id value [ \" + id + \" ] must be unique.\", event.line, col + attr.index, _this, attr.raw);\n\t                        }\n\t                    }\n\t                    break;\n\t                }\n\t            }\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar inlineScriptDisabled = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'inline-script-disabled',\n\t    description: 'Inline script cannot be used.',\n\t    init: function (parser, reporter) {\n\t        var _this = this;\n\t        parser.addListener('tagstart', function (event) {\n\t            var attrs = event.attrs;\n\t            var attr;\n\t            var col = event.col + event.tagName.length + 1;\n\t            var attrName;\n\t            var reEvent = /^on(unload|message|submit|select|scroll|resize|mouseover|mouseout|mousemove|mouseleave|mouseenter|mousedown|load|keyup|keypress|keydown|focus|dblclick|click|change|blur|error)$/i;\n\t            for (var i = 0, l = attrs.length; i < l; i++) {\n\t                attr = attrs[i];\n\t                attrName = attr.name.toLowerCase();\n\t                if (reEvent.test(attrName) === true) {\n\t                    reporter.warn(\"Inline script [ \" + attr.raw + \" ] cannot be used.\", event.line, col + attr.index, _this, attr.raw);\n\t                }\n\t                else if (attrName === 'src' || attrName === 'href') {\n\t                    if (/^\\s*javascript:/i.test(attr.value)) {\n\t                        reporter.warn(\"Inline script [ \" + attr.raw + \" ] cannot be used.\", event.line, col + attr.index, _this, attr.raw);\n\t                    }\n\t                }\n\t            }\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar inlineStyleDisabled = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'inline-style-disabled',\n\t    description: 'Inline style cannot be used.',\n\t    init: function (parser, reporter) {\n\t        var _this = this;\n\t        parser.addListener('tagstart', function (event) {\n\t            var attrs = event.attrs;\n\t            var attr;\n\t            var col = event.col + event.tagName.length + 1;\n\t            for (var i = 0, l = attrs.length; i < l; i++) {\n\t                attr = attrs[i];\n\t                if (attr.name.toLowerCase() === 'style') {\n\t                    reporter.warn(\"Inline style [ \" + attr.raw + \" ] cannot be used.\", event.line, col + attr.index, _this, attr.raw);\n\t                }\n\t            }\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar inputRequiresLabel = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'input-requires-label',\n\t    description: 'All [ input ] tags must have a corresponding [ label ] tag. ',\n\t    init: function (parser, reporter) {\n\t        var _this = this;\n\t        var labelTags = [];\n\t        var inputTags = [];\n\t        parser.addListener('tagstart', function (event) {\n\t            var tagName = event.tagName.toLowerCase();\n\t            var mapAttrs = parser.getMapAttrs(event.attrs);\n\t            var col = event.col + tagName.length + 1;\n\t            if (tagName === 'input') {\n\t                inputTags.push({ event: event, col: col, id: mapAttrs['id'] });\n\t            }\n\t            if (tagName === 'label') {\n\t                if ('for' in mapAttrs && mapAttrs['for'] !== '') {\n\t                    labelTags.push({ event: event, col: col, forValue: mapAttrs['for'] });\n\t                }\n\t            }\n\t        });\n\t        parser.addListener('end', function () {\n\t            inputTags.forEach(function (inputTag) {\n\t                if (!hasMatchingLabelTag(inputTag)) {\n\t                    reporter.warn('No matching [ label ] tag found.', inputTag.event.line, inputTag.col, _this, inputTag.event.raw);\n\t                }\n\t            });\n\t        });\n\t        function hasMatchingLabelTag(inputTag) {\n\t            var found = false;\n\t            labelTags.forEach(function (labelTag) {\n\t                if (inputTag.id && inputTag.id === labelTag.forValue) {\n\t                    found = true;\n\t                }\n\t            });\n\t            return found;\n\t        }\n\t    },\n\t};\n\n\t});\n\n\tvar scriptDisabled = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'script-disabled',\n\t    description: 'The <script> tag cannot be used.',\n\t    init: function (parser, reporter) {\n\t        var _this = this;\n\t        parser.addListener('tagstart', function (event) {\n\t            if (event.tagName.toLowerCase() === 'script') {\n\t                reporter.error('The <script> tag cannot be used.', event.line, event.col, _this, event.raw);\n\t            }\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar spaceTabMixedDisabled = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'space-tab-mixed-disabled',\n\t    description: 'Do not mix tabs and spaces for indentation.',\n\t    init: function (parser, reporter, options) {\n\t        var _this = this;\n\t        var indentMode = 'nomix';\n\t        var spaceLengthRequire = null;\n\t        if (typeof options === 'string') {\n\t            var match = /^([a-z]+)(\\d+)?/.exec(options);\n\t            if (match) {\n\t                indentMode = match[1];\n\t                spaceLengthRequire = match[2] && parseInt(match[2], 10);\n\t            }\n\t        }\n\t        parser.addListener('text', function (event) {\n\t            var raw = event.raw;\n\t            var reMixed = /(^|\\r?\\n)([ \\t]+)/g;\n\t            var match;\n\t            while ((match = reMixed.exec(raw))) {\n\t                var fixedPos = parser.fixPos(event, match.index + match[1].length);\n\t                if (fixedPos.col !== 1) {\n\t                    continue;\n\t                }\n\t                var whiteSpace = match[2];\n\t                if (indentMode === 'space') {\n\t                    if (spaceLengthRequire) {\n\t                        if (/^ +$/.test(whiteSpace) === false ||\n\t                            whiteSpace.length % spaceLengthRequire !== 0) {\n\t                            reporter.warn(\"Please use space for indentation and keep \" + spaceLengthRequire + \" length.\", fixedPos.line, 1, _this, event.raw);\n\t                        }\n\t                    }\n\t                    else {\n\t                        if (/^ +$/.test(whiteSpace) === false) {\n\t                            reporter.warn('Please use space for indentation.', fixedPos.line, 1, _this, event.raw);\n\t                        }\n\t                    }\n\t                }\n\t                else if (indentMode === 'tab' && /^\\t+$/.test(whiteSpace) === false) {\n\t                    reporter.warn('Please use tab for indentation.', fixedPos.line, 1, _this, event.raw);\n\t                }\n\t                else if (/ +\\t|\\t+ /.test(whiteSpace) === true) {\n\t                    reporter.warn('Do not mix tabs and spaces for indentation.', fixedPos.line, 1, _this, event.raw);\n\t                }\n\t            }\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar specCharEscape = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'spec-char-escape',\n\t    description: 'Special characters must be escaped.',\n\t    init: function (parser, reporter) {\n\t        var _this = this;\n\t        parser.addListener('text', function (event) {\n\t            var raw = event.raw;\n\t            var reSpecChar = /([<>])|( \\& )/g;\n\t            var match;\n\t            while ((match = reSpecChar.exec(raw))) {\n\t                var fixedPos = parser.fixPos(event, match.index);\n\t                reporter.error(\"Special characters must be escaped : [ \" + match[0] + \" ].\", fixedPos.line, fixedPos.col, _this, event.raw);\n\t            }\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar srcNotEmpty = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'src-not-empty',\n\t    description: 'The src attribute of an img(script,link) must have a value.',\n\t    init: function (parser, reporter) {\n\t        var _this = this;\n\t        parser.addListener('tagstart', function (event) {\n\t            var tagName = event.tagName;\n\t            var attrs = event.attrs;\n\t            var attr;\n\t            var col = event.col + tagName.length + 1;\n\t            for (var i = 0, l = attrs.length; i < l; i++) {\n\t                attr = attrs[i];\n\t                if (((/^(img|script|embed|bgsound|iframe)$/.test(tagName) === true &&\n\t                    attr.name === 'src') ||\n\t                    (tagName === 'link' && attr.name === 'href') ||\n\t                    (tagName === 'object' && attr.name === 'data')) &&\n\t                    attr.value === '') {\n\t                    reporter.error(\"The attribute [ \" + attr.name + \" ] of the tag [ \" + tagName + \" ] must have a value.\", event.line, col + attr.index, _this, attr.raw);\n\t                }\n\t            }\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar styleDisabled = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'style-disabled',\n\t    description: '<style> tags cannot be used.',\n\t    init: function (parser, reporter) {\n\t        var _this = this;\n\t        parser.addListener('tagstart', function (event) {\n\t            if (event.tagName.toLowerCase() === 'style') {\n\t                reporter.warn('The <style> tag cannot be used.', event.line, event.col, _this, event.raw);\n\t            }\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar tagPair = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'tag-pair',\n\t    description: 'Tag must be paired.',\n\t    init: function (parser, reporter) {\n\t        var _this = this;\n\t        var stack = [];\n\t        var mapEmptyTags = parser.makeMap('area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed,track,command,source,keygen,wbr');\n\t        parser.addListener('tagstart', function (event) {\n\t            var tagName = event.tagName.toLowerCase();\n\t            if (mapEmptyTags[tagName] === undefined && !event.close) {\n\t                stack.push({\n\t                    tagName: tagName,\n\t                    line: event.line,\n\t                    raw: event.raw,\n\t                });\n\t            }\n\t        });\n\t        parser.addListener('tagend', function (event) {\n\t            var tagName = event.tagName.toLowerCase();\n\t            var pos;\n\t            for (pos = stack.length - 1; pos >= 0; pos--) {\n\t                if (stack[pos].tagName === tagName) {\n\t                    break;\n\t                }\n\t            }\n\t            if (pos >= 0) {\n\t                var arrTags = [];\n\t                for (var i = stack.length - 1; i > pos; i--) {\n\t                    arrTags.push(\"</\" + stack[i].tagName + \">\");\n\t                }\n\t                if (arrTags.length > 0) {\n\t                    var lastEvent = stack[stack.length - 1];\n\t                    reporter.error(\"Tag must be paired, missing: [ \" + arrTags.join('') + \" ], start tag match failed [ \" + lastEvent.raw + \" ] on line \" + lastEvent.line + \".\", event.line, event.col, _this, event.raw);\n\t                }\n\t                stack.length = pos;\n\t            }\n\t            else {\n\t                reporter.error(\"Tag must be paired, no start tag: [ \" + event.raw + \" ]\", event.line, event.col, _this, event.raw);\n\t            }\n\t        });\n\t        parser.addListener('end', function (event) {\n\t            var arrTags = [];\n\t            for (var i = stack.length - 1; i >= 0; i--) {\n\t                arrTags.push(\"</\" + stack[i].tagName + \">\");\n\t            }\n\t            if (arrTags.length > 0) {\n\t                var lastEvent = stack[stack.length - 1];\n\t                reporter.error(\"Tag must be paired, missing: [ \" + arrTags.join('') + \" ], open tag match failed [ \" + lastEvent.raw + \" ] on line \" + lastEvent.line + \".\", event.line, event.col, _this, '');\n\t            }\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar tagSelfClose = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'tag-self-close',\n\t    description: 'Empty tags must be self closed.',\n\t    init: function (parser, reporter) {\n\t        var _this = this;\n\t        var mapEmptyTags = parser.makeMap('area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed,track,command,source,keygen,wbr');\n\t        parser.addListener('tagstart', function (event) {\n\t            var tagName = event.tagName.toLowerCase();\n\t            if (mapEmptyTags[tagName] !== undefined) {\n\t                if (!event.close) {\n\t                    reporter.warn(\"The empty tag : [ \" + tagName + \" ] must be self closed.\", event.line, event.col, _this, event.raw);\n\t                }\n\t            }\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar tagnameLowercase = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'tagname-lowercase',\n\t    description: 'All html element names must be in lowercase.',\n\t    init: function (parser, reporter, options) {\n\t        var _this = this;\n\t        var exceptions = Array.isArray(options)\n\t            ? options\n\t            : [];\n\t        parser.addListener('tagstart,tagend', function (event) {\n\t            var tagName = event.tagName;\n\t            if (exceptions.indexOf(tagName) === -1 &&\n\t                tagName !== tagName.toLowerCase()) {\n\t                reporter.error(\"The html element name of [ \" + tagName + \" ] must be in lowercase.\", event.line, event.col, _this, event.raw);\n\t            }\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar tagnameSpecialchars = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'tagname-specialchars',\n\t    description: 'All html element names must be in lowercase.',\n\t    init: function (parser, reporter) {\n\t        var _this = this;\n\t        var specialchars = /[^a-zA-Z0-9\\-:_]/;\n\t        parser.addListener('tagstart,tagend', function (event) {\n\t            var tagName = event.tagName;\n\t            if (specialchars.test(tagName)) {\n\t                reporter.error(\"The html element name of [ \" + tagName + \" ] contains special character.\", event.line, event.col, _this, event.raw);\n\t            }\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar titleRequire = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'title-require',\n\t    description: '<title> must be present in <head> tag.',\n\t    init: function (parser, reporter) {\n\t        var _this = this;\n\t        var headBegin = false;\n\t        var hasTitle = false;\n\t        var onTagStart = function (event) {\n\t            var tagName = event.tagName.toLowerCase();\n\t            if (tagName === 'head') {\n\t                headBegin = true;\n\t            }\n\t            else if (tagName === 'title' && headBegin) {\n\t                hasTitle = true;\n\t            }\n\t        };\n\t        var onTagEnd = function (event) {\n\t            var tagName = event.tagName.toLowerCase();\n\t            if (hasTitle && tagName === 'title') {\n\t                var lastEvent = event.lastEvent;\n\t                if (lastEvent.type !== 'text' ||\n\t                    (lastEvent.type === 'text' && /^\\s*$/.test(lastEvent.raw) === true)) {\n\t                    reporter.error('<title></title> must not be empty.', event.line, event.col, _this, event.raw);\n\t                }\n\t            }\n\t            else if (tagName === 'head') {\n\t                if (hasTitle === false) {\n\t                    reporter.error('<title> must be present in <head> tag.', event.line, event.col, _this, event.raw);\n\t                }\n\t                parser.removeListener('tagstart', onTagStart);\n\t                parser.removeListener('tagend', onTagEnd);\n\t            }\n\t        };\n\t        parser.addListener('tagstart', onTagStart);\n\t        parser.addListener('tagend', onTagEnd);\n\t    },\n\t};\n\n\t});\n\n\tvar tagsCheck = createCommonjsModule(function (module, exports) {\n\tvar __assign = (commonjsGlobal && commonjsGlobal.__assign) || function () {\n\t    __assign = Object.assign || function(t) {\n\t        for (var s, i = 1, n = arguments.length; i < n; i++) {\n\t            s = arguments[i];\n\t            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n\t                t[p] = s[p];\n\t        }\n\t        return t;\n\t    };\n\t    return __assign.apply(this, arguments);\n\t};\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar tagsTypings = {\n\t    a: {\n\t        selfclosing: false,\n\t        attrsRequired: ['href', 'title'],\n\t        redundantAttrs: ['alt'],\n\t    },\n\t    div: {\n\t        selfclosing: false,\n\t    },\n\t    main: {\n\t        selfclosing: false,\n\t        redundantAttrs: ['role'],\n\t    },\n\t    nav: {\n\t        selfclosing: false,\n\t        redundantAttrs: ['role'],\n\t    },\n\t    script: {\n\t        attrsOptional: [\n\t            ['async', 'async'],\n\t            ['defer', 'defer'],\n\t        ],\n\t    },\n\t    img: {\n\t        selfclosing: true,\n\t        attrsRequired: ['src', 'alt', 'title'],\n\t    },\n\t};\n\texports.default = {\n\t    id: 'tags-check',\n\t    description: 'Checks html tags.',\n\t    init: function (parser, reporter, options) {\n\t        var _this = this;\n\t        tagsTypings = __assign(__assign({}, tagsTypings), options);\n\t        parser.addListener('tagstart', function (event) {\n\t            var attrs = event.attrs;\n\t            var col = event.col + event.tagName.length + 1;\n\t            var tagName = event.tagName.toLowerCase();\n\t            if (tagsTypings[tagName]) {\n\t                var currentTagType = tagsTypings[tagName];\n\t                if (currentTagType.selfclosing === true && !event.close) {\n\t                    reporter.warn(\"The <\" + tagName + \"> tag must be selfclosing.\", event.line, event.col, _this, event.raw);\n\t                }\n\t                else if (currentTagType.selfclosing === false && event.close) {\n\t                    reporter.warn(\"The <\" + tagName + \"> tag must not be selfclosing.\", event.line, event.col, _this, event.raw);\n\t                }\n\t                if (Array.isArray(currentTagType.attrsRequired)) {\n\t                    var attrsRequired = currentTagType.attrsRequired;\n\t                    attrsRequired.forEach(function (id) {\n\t                        if (Array.isArray(id)) {\n\t                            var copyOfId = id.map(function (a) { return a; });\n\t                            var realID_1 = copyOfId.shift();\n\t                            var values_1 = copyOfId;\n\t                            if (attrs.some(function (attr) { return attr.name === realID_1; })) {\n\t                                attrs.forEach(function (attr) {\n\t                                    if (attr.name === realID_1 &&\n\t                                        values_1.indexOf(attr.value) === -1) {\n\t                                        reporter.error(\"The <\" + tagName + \"> tag must have attr '\" + realID_1 + \"' with one value of '\" + values_1.join(\"' or '\") + \"'.\", event.line, col, _this, event.raw);\n\t                                    }\n\t                                });\n\t                            }\n\t                            else {\n\t                                reporter.error(\"The <\" + tagName + \"> tag must have attr '\" + realID_1 + \"'.\", event.line, col, _this, event.raw);\n\t                            }\n\t                        }\n\t                        else if (!attrs.some(function (attr) { return id.split('|').indexOf(attr.name) !== -1; })) {\n\t                            reporter.error(\"The <\" + tagName + \"> tag must have attr '\" + id + \"'.\", event.line, col, _this, event.raw);\n\t                        }\n\t                    });\n\t                }\n\t                if (Array.isArray(currentTagType.attrsOptional)) {\n\t                    var attrsOptional = currentTagType.attrsOptional;\n\t                    attrsOptional.forEach(function (id) {\n\t                        if (Array.isArray(id)) {\n\t                            var copyOfId = id.map(function (a) { return a; });\n\t                            var realID_2 = copyOfId.shift();\n\t                            var values_2 = copyOfId;\n\t                            if (attrs.some(function (attr) { return attr.name === realID_2; })) {\n\t                                attrs.forEach(function (attr) {\n\t                                    if (attr.name === realID_2 &&\n\t                                        values_2.indexOf(attr.value) === -1) {\n\t                                        reporter.error(\"The <\" + tagName + \"> tag must have optional attr '\" + realID_2 + \"' with one value of '\" + values_2.join(\"' or '\") + \"'.\", event.line, col, _this, event.raw);\n\t                                    }\n\t                                });\n\t                            }\n\t                        }\n\t                    });\n\t                }\n\t                if (Array.isArray(currentTagType.redundantAttrs)) {\n\t                    var redundantAttrs = currentTagType.redundantAttrs;\n\t                    redundantAttrs.forEach(function (attrName) {\n\t                        if (attrs.some(function (attr) { return attr.name === attrName; })) {\n\t                            reporter.error(\"The attr '\" + attrName + \"' is redundant for <\" + tagName + \"> and should be ommited.\", event.line, col, _this, event.raw);\n\t                        }\n\t                    });\n\t                }\n\t            }\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar attrNoUnnecessaryWhitespace = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = {\n\t    id: 'attr-no-unnecessary-whitespace',\n\t    description: 'No spaces between attribute names and values.',\n\t    init: function (parser, reporter, options) {\n\t        var _this = this;\n\t        var exceptions = Array.isArray(options) ? options : [];\n\t        parser.addListener('tagstart', function (event) {\n\t            var attrs = event.attrs;\n\t            var col = event.col + event.tagName.length + 1;\n\t            for (var i = 0; i < attrs.length; i++) {\n\t                if (exceptions.indexOf(attrs[i].name) === -1) {\n\t                    var match = /(\\s*)=(\\s*)/.exec(attrs[i].raw.trim());\n\t                    if (match && (match[1].length !== 0 || match[2].length !== 0)) {\n\t                        reporter.error(\"The attribute '\" + attrs[i].name + \"' must not have spaces between the name and value.\", event.line, col + attrs[i].index, _this, attrs[i].raw);\n\t                    }\n\t                }\n\t            }\n\t        });\n\t    },\n\t};\n\n\t});\n\n\tvar rules = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\tObject.defineProperty(exports, \"altRequire\", { enumerable: true, get: function () { return altRequire.default; } });\n\n\tObject.defineProperty(exports, \"attrLowercase\", { enumerable: true, get: function () { return attrLowercase.default; } });\n\n\tObject.defineProperty(exports, \"attrSort\", { enumerable: true, get: function () { return attrSorted.default; } });\n\n\tObject.defineProperty(exports, \"attrNoDuplication\", { enumerable: true, get: function () { return attrNoDuplication.default; } });\n\n\tObject.defineProperty(exports, \"attrUnsafeChars\", { enumerable: true, get: function () { return attrUnsafeChars.default; } });\n\n\tObject.defineProperty(exports, \"attrValueDoubleQuotes\", { enumerable: true, get: function () { return attrValueDoubleQuotes.default; } });\n\n\tObject.defineProperty(exports, \"attrValueNotEmpty\", { enumerable: true, get: function () { return attrValueNotEmpty.default; } });\n\n\tObject.defineProperty(exports, \"attrValueSingleQuotes\", { enumerable: true, get: function () { return attrValueSingleQuotes.default; } });\n\n\tObject.defineProperty(exports, \"attrWhitespace\", { enumerable: true, get: function () { return attrWhitespace.default; } });\n\n\tObject.defineProperty(exports, \"doctypeFirst\", { enumerable: true, get: function () { return doctypeFirst.default; } });\n\n\tObject.defineProperty(exports, \"doctypeHTML5\", { enumerable: true, get: function () { return doctypeHtml5.default; } });\n\n\tObject.defineProperty(exports, \"headScriptDisabled\", { enumerable: true, get: function () { return headScriptDisabled.default; } });\n\n\tObject.defineProperty(exports, \"hrefAbsOrRel\", { enumerable: true, get: function () { return hrefAbsOrRel.default; } });\n\n\tObject.defineProperty(exports, \"htmlLangRequire\", { enumerable: true, get: function () { return htmlLangRequire.default; } });\n\n\tObject.defineProperty(exports, \"idClsasAdDisabled\", { enumerable: true, get: function () { return idClassAdDisabled.default; } });\n\n\tObject.defineProperty(exports, \"idClassValue\", { enumerable: true, get: function () { return idClassValue.default; } });\n\n\tObject.defineProperty(exports, \"idUnique\", { enumerable: true, get: function () { return idUnique.default; } });\n\n\tObject.defineProperty(exports, \"inlineScriptDisabled\", { enumerable: true, get: function () { return inlineScriptDisabled.default; } });\n\n\tObject.defineProperty(exports, \"inlineStyleDisabled\", { enumerable: true, get: function () { return inlineStyleDisabled.default; } });\n\n\tObject.defineProperty(exports, \"inputRequiresLabel\", { enumerable: true, get: function () { return inputRequiresLabel.default; } });\n\n\tObject.defineProperty(exports, \"scriptDisabled\", { enumerable: true, get: function () { return scriptDisabled.default; } });\n\n\tObject.defineProperty(exports, \"spaceTabMixedDisabled\", { enumerable: true, get: function () { return spaceTabMixedDisabled.default; } });\n\n\tObject.defineProperty(exports, \"specCharEscape\", { enumerable: true, get: function () { return specCharEscape.default; } });\n\n\tObject.defineProperty(exports, \"srcNotEmpty\", { enumerable: true, get: function () { return srcNotEmpty.default; } });\n\n\tObject.defineProperty(exports, \"styleDisabled\", { enumerable: true, get: function () { return styleDisabled.default; } });\n\n\tObject.defineProperty(exports, \"tagPair\", { enumerable: true, get: function () { return tagPair.default; } });\n\n\tObject.defineProperty(exports, \"tagSelfClose\", { enumerable: true, get: function () { return tagSelfClose.default; } });\n\n\tObject.defineProperty(exports, \"tagnameLowercase\", { enumerable: true, get: function () { return tagnameLowercase.default; } });\n\n\tObject.defineProperty(exports, \"tagnameSpecialChars\", { enumerable: true, get: function () { return tagnameSpecialchars.default; } });\n\n\tObject.defineProperty(exports, \"titleRequire\", { enumerable: true, get: function () { return titleRequire.default; } });\n\n\tObject.defineProperty(exports, \"tagsCheck\", { enumerable: true, get: function () { return tagsCheck.default; } });\n\n\tObject.defineProperty(exports, \"attrNoUnnecessaryWhitespace\", { enumerable: true, get: function () { return attrNoUnnecessaryWhitespace.default; } });\n\n\t});\n\n\tvar core = createCommonjsModule(function (module, exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.HTMLParser = exports.Reporter = exports.HTMLRules = exports.HTMLHint = void 0;\n\n\texports.HTMLParser = htmlparser.default;\n\n\texports.Reporter = reporter.default;\n\n\texports.HTMLRules = rules;\n\tvar HTMLHintCore = (function () {\n\t    function HTMLHintCore() {\n\t        this.rules = {};\n\t        this.defaultRuleset = {\n\t            'tagname-lowercase': true,\n\t            'attr-lowercase': true,\n\t            'attr-value-double-quotes': true,\n\t            'doctype-first': true,\n\t            'tag-pair': true,\n\t            'spec-char-escape': true,\n\t            'id-unique': true,\n\t            'src-not-empty': true,\n\t            'attr-no-duplication': true,\n\t            'title-require': true,\n\t        };\n\t    }\n\t    HTMLHintCore.prototype.addRule = function (rule) {\n\t        this.rules[rule.id] = rule;\n\t    };\n\t    HTMLHintCore.prototype.verify = function (html, ruleset) {\n\t        if (ruleset === void 0) { ruleset = this.defaultRuleset; }\n\t        if (Object.keys(ruleset).length === 0) {\n\t            ruleset = this.defaultRuleset;\n\t        }\n\t        html = html.replace(/^\\s*<!--\\s*htmlhint\\s+([^\\r\\n]+?)\\s*-->/i, function (all, strRuleset) {\n\t            strRuleset.replace(/(?:^|,)\\s*([^:,]+)\\s*(?:\\:\\s*([^,\\s]+))?/g, function (all, ruleId, value) {\n\t                ruleset[ruleId] =\n\t                    value !== undefined && value.length > 0 ? JSON.parse(value) : true;\n\t                return '';\n\t            });\n\t            return '';\n\t        });\n\t        var parser = new htmlparser.default();\n\t        var reporter$1 = new reporter.default(html, ruleset);\n\t        var rules = this.rules;\n\t        var rule;\n\t        for (var id in ruleset) {\n\t            rule = rules[id];\n\t            if (rule !== undefined && ruleset[id] !== false) {\n\t                rule.init(parser, reporter$1, ruleset[id]);\n\t            }\n\t        }\n\t        parser.parse(html);\n\t        return reporter$1.messages;\n\t    };\n\t    HTMLHintCore.prototype.format = function (arrMessages, options) {\n\t        if (options === void 0) { options = {}; }\n\t        var arrLogs = [];\n\t        var colors = {\n\t            white: '',\n\t            grey: '',\n\t            red: '',\n\t            reset: '',\n\t        };\n\t        if (options.colors) {\n\t            colors.white = '\\x1b[37m';\n\t            colors.grey = '\\x1b[90m';\n\t            colors.red = '\\x1b[31m';\n\t            colors.reset = '\\x1b[39m';\n\t        }\n\t        var indent = options.indent || 0;\n\t        arrMessages.forEach(function (hint) {\n\t            var leftWindow = 40;\n\t            var rightWindow = leftWindow + 20;\n\t            var evidence = hint.evidence;\n\t            var line = hint.line;\n\t            var col = hint.col;\n\t            var evidenceCount = evidence.length;\n\t            var leftCol = col > leftWindow + 1 ? col - leftWindow : 1;\n\t            var rightCol = evidence.length > col + rightWindow ? col + rightWindow : evidenceCount;\n\t            if (col < leftWindow + 1) {\n\t                rightCol += leftWindow - col + 1;\n\t            }\n\t            evidence = evidence.replace(/\\t/g, ' ').substring(leftCol - 1, rightCol);\n\t            if (leftCol > 1) {\n\t                evidence = \"...\" + evidence;\n\t                leftCol -= 3;\n\t            }\n\t            if (rightCol < evidenceCount) {\n\t                evidence += '...';\n\t            }\n\t            arrLogs.push(colors.white + repeatStr(indent) + \"L\" + line + \" |\" + colors.grey + evidence + colors.reset);\n\t            var pointCol = col - leftCol;\n\t            var match = evidence.substring(0, pointCol).match(/[^\\u0000-\\u00ff]/g);\n\t            if (match !== null) {\n\t                pointCol += match.length;\n\t            }\n\t            arrLogs.push(colors.white +\n\t                repeatStr(indent) +\n\t                repeatStr(String(line).length + 3 + pointCol) + \"^ \" + colors.red + hint.message + \" (\" + hint.rule.id + \")\" + colors.reset);\n\t        });\n\t        return arrLogs;\n\t    };\n\t    return HTMLHintCore;\n\t}());\n\tfunction repeatStr(n, str) {\n\t    return new Array(n + 1).join(str || ' ');\n\t}\n\texports.HTMLHint = new HTMLHintCore();\n\tObject.keys(rules).forEach(function (key) {\n\t    exports.HTMLHint.addRule(rules[key]);\n\t});\n\n\t});\n\n\tvar core$1 = /*@__PURE__*/unwrapExports(core);\n\n\treturn core$1;\n\n})));\n","module.exports = {\n    id: 'head-valid-content-model',\n    description: 'The head tag must only contain valid elements.',\n    init(parser, reporter, options) {\n        const tags = Array.isArray(options) ? options : [\n            'base', 'link', 'meta', 'noscript', 'script', 'style', 'template', 'title'\n        ];\n\n        const onTagEnd = event => {\n            if(event.tagName === 'head') {\n                parser.removeListener('tagstart', onChildrenTagStart);\n            }\n        };\n        \n        const onTagStart = event => {\n            if(event.tagName === 'head') {\n                parser.addListener('tagstart', onChildrenTagStart);\n            }\n        };\n\n        const onChildrenTagStart = event => {\n            // Ignore if an approved tag.\n            if(tags.indexOf(event.tagName.toLowerCase()) > -1) {\n                return;\n            }\n\n            reporter.warn(\n                `The [ ${event.tagName} ] tag is not allowed inside the head tag.`,\n                event.line,\n                event.col,\n                this,\n                event.raw\n            );\n        };\n        \n        parser.addListener('tagstart', onTagStart);\n        parser.addListener('tagend', onTagEnd);\n    }\n};","import day from 'dayjs';\n\nexport default function(value, format) {\n    return day(String(value || '')).format(format);\n}\n","export * from \"-!../../mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../vue-loader/lib/loaders/stylePostLoader.js!../../postcss-loader/src/index.js??ref--8-oneOf-1-2!../../sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../cache-loader/dist/cjs.js??ref--0-0!../../vue-loader/lib/index.js??vue-loader-options!./Notepad.vue?vue&type=style&index=0&lang=scss&\"","// extracted by mini-css-extract-plugin","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"notepad\",class:{ editable: _vm.editable },on:{\"click\":_vm.onClickContainer}},[_c(this.component(_vm.header),{directives:[{name:\"component-model\",rawName:\"v-component-model\",value:(_vm.form.header),expression:\"form.header\"},{name:\"autogrow\",rawName:\"v-autogrow\",value:(_vm.header && _vm.editable),expression:\"header && editable\"}],ref:\"header\",tag:\"component\",staticClass:\"notepad-header\"},[_vm._t(\"header\")],2),_c('div',{staticClass:\"notepad-lines\"},[_c(this.component(_vm.body),{directives:[{name:\"component-model\",rawName:\"v-component-model\",value:(_vm.form.body),expression:\"form.body\"},{name:\"autogrow\",rawName:\"v-autogrow\",value:(_vm.body && _vm.editable),expression:\"body && editable\"}],ref:\"body\",tag:\"component\",staticClass:\"notepad-body\"},[_vm._t(\"default\")],2)],1),_c(this.component(_vm.footer),{directives:[{name:\"component-model\",rawName:\"v-component-model\",value:(_vm.form.footer),expression:\"form.footer\"},{name:\"autogrow\",rawName:\"v-autogrow\",value:(_vm.footer && _vm.editable),expression:\"footer && editable\"}],ref:\"footer\",tag:\"component\",staticClass:\"notepad-footer\"},[_vm._t(\"footer\")],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","const STYLE_ATTRIBUTES = [\n    'font',\n    'fontFamily',\n    'fontKerning',\n    'fontSize',\n    'fontStretch',\n    'fontStyle',\n    'fontVariant',\n    'fontVariantLigatures',\n    'fontVariantCaps',\n    'fontVariantNumeric',\n    'fontVariantEastAsian',\n    'fontWeight',\n    'lineHeight',\n    'letterSpacing',\n    'padding',\n    'margin',\n    'textAlign',\n    'textAlignLast',\n    'textDecoration',\n    'textDecorationLine',\n    'textDecorationStyle',\n    'textDecorationColor',\n    'textDecorationSkipInk',\n    'textDecorationPosition',\n    'textIndent',\n    'textRendering',\n    'textShadow',\n    'textSizeAdjust',\n    'textOverflow',\n    'textTransform',\n    'width',\n    'wordBreak',\n    'wordSpacing',\n    'wordWrap'\n];\n\nfunction escape(html) {\n    const el = document.createElement('textarea');    \n    el.textContent = html;\n    return el.innerHTML;\n}\n\nfunction unescape(html) {\n    const el = document.createElement('textarea');\n    el.innerHTML = html;\n    return el.textContent;\n}\n\nfunction int(str) {\n    if(typeof str === 'number') {\n        return str;\n    }\n    else if(!str || !str.replace) {\n        return 0;\n    }\n    \n    return parseInt(str.replace(/[^\\d.]+/g, '')) || 0;\n}\n\nfunction input(div, el, minHeight, maxHeight) {\n    div.innerHTML = escape(el.value).replace(/(?:\\r\\n|\\r|\\n)/g, '<br />') + '&nbsp;';\n\n    let dynamicHeight = Math.max(minHeight, height(div));\n  \n    if(div.innerHTML.match(/(<br\\s?\\/?\\>)+/)) {\n        dynamicHeight += int(style(el, 'lineHeight'));\n    }\n\n    el.style.height = (\n        (!maxHeight || dynamicHeight < maxHeight) ? dynamicHeight : maxHeight\n    ) + 'px';\n}\n\nfunction height(el) {\n    return int(style(el, 'height'));\n}\n\nfunction style(el, attr) {\n    return window.getComputedStyle(el)[attr];\n}\n\nfunction mimic(el, minHeight) {\n    const div = document.createElement('div');\n    const styles = window.getComputedStyle(el);\n\n    div.style.position = 'absolute';\n    div.style.zIndex = -1;\n    div.style.visibility = 'hidden';\n    // div.style.minHeight = `${minHeight}px`;\n    \n    el.parentNode.insertBefore(div, el.nextSibling);\n\n    STYLE_ATTRIBUTES.forEach(key => div.style[key] = styles[key]);\n\n    return div;\n}\n\nfunction init(el, binding, vnode) {\n    const minHeight = height(el);\n    const div = mimic(el, minHeight);\n    const maxHeight = binding.value !== true ? binding.value : 0;\n\n    el.addEventListener('input', event => {\n        input(div, event.target, minHeight, maxHeight);\n    });\n\n    input(div, el, minHeight, maxHeight);\n\n    return;\n}\n\nexport default {\n    \n    inserted(el, binding, vnode) {\n        const elm = el;\n\n        if(binding.value === false) {\n            return;\n        }\n\n        if(el.tagName !== 'TEXTAREA') {\n            el = el.querySelector('textarea');\n        }\n\n        if(!el) {\n            throw new Error('A textarea is required for the v-autogrow directive.');\n        }\n        \n        init(el, binding, vnode);\n\n        el.resize = function() {\n            vnode.context.$nextTick(() => {\n                el.dispatchEvent(new Event('input'));\n            });\n        };\n    }\n\n};\n","import Autogrow from './Autogrow';\nexport default Autogrow;\n","<template>\n    <div class=\"notepad\" :class=\"{ editable }\"  @click=\"onClickContainer\">\n        <component\n            v-component-model=\"form.header\"\n            v-autogrow=\"header && editable\"\n            :is=\"this.component(header)\"\n            ref=\"header\"\n            class=\"notepad-header\">\n            <slot name=\"header\" />\n        </component>\n\n        <div class=\"notepad-lines\">\n            <component\n                v-component-model=\"form.body\"\n                v-autogrow=\"body && editable\"\n                :is=\"this.component(body)\"\n                ref=\"body\"\n                class=\"notepad-body\">\n                <slot/>\n            </component>\n        </div>\n        \n        <component\n            v-component-model=\"form.footer\"\n            v-autogrow=\"footer && editable\"\n            :is=\"this.component(footer)\"\n            ref=\"footer\"\n            class=\"notepad-footer\">\n            <slot name=\"footer\" />\n        </component>\n    </div>\n</template>\n\n<script>\nimport Autogrow from 'vue-interface/src/Directives/Autogrow';\n\nexport default {\n\n    props: {\n        \n        editable: Boolean,\n\n        header: {\n            type: Boolean, \n            default: true\n        },\n\n        body: {\n            type: Boolean, \n            default: true\n        },\n\n        footer: {\n            type: Boolean, \n            default: true\n        }\n\n    },\n\n    directives: {\n        Autogrow,\n        componentModel: {\n            inserted(el, binding, vnode) {\n                const parts = binding.expression.split('.');\n                const varName = parts.pop();\n                const context = parts.reduce((carry, value) => {\n                    return carry[value]\n                }, vnode.context);\n\n                el.addEventListener('input', e => {\n                    vnode.context.$set(context, varName, e.target.value);\n                });\n\n                el.value = (vnode.children || []).map(slot => {\n                    return slot.elm.outerHTML || slot.elm.textContent;\n                })\n                .join(\"\\n\");\n                \n                vnode.context.$set(context, varName, el.value);\n            }\n        }\n    },\n\n    watch: {\n\n        form: {\n            deep: true,\n            handler(value) {\n                this.$emit('input', this.form);\n            }\n        }\n\n    },\n\n    methods: {\n        \n        component(value) {\n            return value && this.editable ? 'textarea' : 'div';\n        },\n        \n        onClickContainer() {\n            if(this.$refs.body && this.editable) {\n                // this.$refs.body.focus();\n            }\n        }\n\n    },\n\n    data() {\n        return {\n            form: {\n                header: null,\n                body: null,\n                footer: null\n            }\n        }\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n$notepad-font-size: 1rem;\n$notepad-line-height: 2rem;\n\n$notepad-gutter-size: $notepad-line-height * 2;\n\n$notepad-header-font-size: 1.5rem;\n$notepad-header-line-height: $notepad-header-font-size * 1.25;\n\n$notepad-footer-font-size: .85rem;\n$notepad-footer-line-height: $notepad-footer-font-size * 1.25;\n\n$notepad-line-padding-right: calc(#{$notepad-gutter-size / 2} + #{$notepad-line-height / 2});\n$notepad-line-padding-left: calc(#{$notepad-gutter-size} + #{$notepad-line-height / 2});\n\n.notepad {\n    display: flex;\n    position: relative;\n    background: white;\n    flex-direction: column;\n    box-shadow: 0px 0px 5px 0px #888;\n\n    &::before {\n        content: \"\";\n        position: absolute;\n        left: $notepad-gutter-size;\n        height: 100%;\n        width: 2px;\n        background: rgba(255, 0, 0, 0.4);\n    }\n\n    &.editable .notepad-lines {\n        padding-bottom: $notepad-line-height;\n    }\n    \n    textarea.notepad-header,\n    textarea.notepad-body,\n    textarea.notepad-footer {\n        border: 0;\n        margin: 0;\n        padding: 0;\n        outline: none;\n        resize: none;\n        width: 100%;\n        height: 100%;\n        background: none;\n        overflow: hidden;\n    }\n\n    .notepad-body, textarea.notepad-body {\n        padding-left: $notepad-line-padding-left;\n        padding-right: $notepad-line-padding-right;\n    }\n\n    .notepad-header,\n    .notepad-footer,\n    textarea.notepad-header,\n    textarea.notepad-footer {\n        padding-left: $notepad-line-padding-left;\n        padding-right: $notepad-line-padding-left;\n    }\n\n    .notepad-header, textarea.notepad-header {\n        z-index: 2;\n        position: relative;\n        text-align: center;\n        min-height: $notepad-line-height;\n        margin-top: $notepad-header-line-height / 2;\n        margin-bottom: $notepad-header-line-height / 2;\n        font-size: $notepad-header-font-size;\n        line-height: $notepad-header-line-height;\n    }\n    \n    .notepad-footer, textarea.notepad-footer {\n        z-index: 2;\n        position: relative;\n        text-align: center;\n        min-height: $notepad-line-height;\n        font-size: $notepad-footer-font-size;\n        line-height: $notepad-footer-line-height;\n    }\n\n    .notepad-lines {\n        margin-top: -$notepad-line-height;\n        background-image: repeating-linear-gradient(\n            white 0px,\n            white calc(2rem - 1px),\n            steelblue $notepad-line-height\n        );\n    }\n\n    .notepad-body, textarea.notepad-body {\n        font-weight: 500;\n        font-size: $notepad-font-size;\n        font-family: Courier, monospace;\n        margin-top: $notepad-line-height;\n        line-height: $notepad-line-height;\n        // padding-bottom: $notepad-line-height;\n\n        * {\n            margin: 0 !important;\n            line-height: $notepad-line-height !important;\n        }\n\n        a {\n            font-weight: bold;\n        }\n    }\n}\n</style>\n","import mod from \"-!../../cache-loader/dist/cjs.js??ref--12-0!../../thread-loader/dist/cjs.js!../../babel-loader/lib/index.js!../../cache-loader/dist/cjs.js??ref--0-0!../../vue-loader/lib/index.js??vue-loader-options!./Notepad.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../cache-loader/dist/cjs.js??ref--12-0!../../thread-loader/dist/cjs.js!../../babel-loader/lib/index.js!../../cache-loader/dist/cjs.js??ref--0-0!../../vue-loader/lib/index.js??vue-loader-options!./Notepad.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Notepad.vue?vue&type=template&id=0f97e36c&\"\nimport script from \"./Notepad.vue?vue&type=script&lang=js&\"\nexport * from \"./Notepad.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Notepad.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Notepad from './Notepad';\n\nexport default Notepad;","const regex = {\n    'absolute': /^https?:\\/\\//,\n    'relative': /^\\w+?:/\n};\n\nclass Pattern {\n    constructor(options) {\n        const { name, pattern } =Object.assign({\n            pattern: null,\n            name: null\n        }, typeof options === 'object' ? options : {\n            pattern: options\n        });\n\n        this.name = name || pattern;\n        this.pattern = pattern;\n        this.regex = regex[pattern] || new RegExp(pattern);\n    }\n\n    test(value) {\n        return this.regex.test(value);\n    }\n\n    error(event, attr) {\n        return new MatchError(this, event, attr);\n    }\n}\n\nclass MatchError extends Error {\n    constructor(pattern, event, attr) {\n        super();\n\n        this.message = `The value of the href attribute [ ${attr.value} ] must follow the ${pattern.name} format.`;        \n        this.name = pattern.name;\n        this.line = event.line;\n        this.col = event.col + event.tagName.length + 1 + attr.index;\n    }\n}\n\nclass ReporterError extends Error {\n    \n    constructor(event, errors, attr) {\n        super(errors.length === 1 ? errors[0].message : (\n            `The value of the href attribute [ ${attr.value} ] must one of the following formats: ${errors.map(event => `\"${event.name}\"`).join(', ')}.`\n        ));\n\n        this.line = event.line;\n        this.col = event.col + event.tagName.length + 1 + attr.index;\n    }\n    \n}\nfunction test(patterns, event, attr) {\n    const errors = [];\n\n    for(const [i, pattern] of Object.entries(patterns)) {\n        if(pattern.test(attr.value)) {\n            return true;\n        }\n        \n        errors.push(pattern.error(event, attr));\n    }\n\n    throw new ReporterError(event, errors, attr);\n}\n\nmodule.exports = {\n    id: 'valid-path-format',\n    description: 'The href attribute must be a valid format.',\n    init(parser, reporter, options) {\n        options = Array.isArray(options) ? options : [];\n\n        parser.addListener('tagstart', (event) => {\n            options.forEach(config => {\n                config = Object.assign({\n                    formats: []\n                }, config || {});\n        \n                const patterns = config.formats.map(pattern => new Pattern(pattern));\n        \n                if(!config.tag || config.tag === event.tagName) {\n                    event.attrs.forEach(attr => {\n                        if(!config.attr || config.attr === attr.name) {\n                            try {\n                                test(patterns, event, attr);\n                            }\n                            catch (e) {\n                                reporter.error(\n                                    e.message,\n                                    e.line,\n                                    e.col,\n                                    this,\n                                    attr.raw\n                                );\n                            }\n                        }\n                    });\n                }\n            });\n        });\n    }\n};"],"sourceRoot":""}